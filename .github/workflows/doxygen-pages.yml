name: Build Doxygen & Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Doxygen & Graphviz
        run: |
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz

      - name: Show Doxygen version
        run: doxygen --version

      # 디버깅: 파일 구조 확인
      - name: Check file structure
        run: |
          echo "=== Repository structure ==="
          find . -name "*.h" -o -name "*.cpp" -o -name "*.ino" | head -20
          echo "=== src directory ==="
          ls -la src/ || echo "src directory not found"
          echo "=== examples directory ==="
          ls -la examples/ || echo "examples directory not found"

      # 디버깅: Doxyfile 설정 확인
      - name: Check Doxyfile settings
        run: |
          echo "=== INPUT setting ==="
          grep "^INPUT" Doxyfile || echo "INPUT not found"
          echo "=== OUTPUT_DIRECTORY setting ==="
          grep "^OUTPUT_DIRECTORY" Doxyfile || echo "OUTPUT_DIRECTORY not found"

      - name: Generate Doxygen
        run: |
          doxygen Doxyfile
          echo "=== Doxygen generation completed ==="

      # 생성된 파일 확인
      - name: Check generated files
        run: |
          echo "=== Generated documentation structure ==="
          ls -la docs/ || echo "docs directory not found"
          ls -la docs/html/ || echo "docs/html directory not found"
          echo "=== HTML files count ==="
          find docs/html -name "*.html" | wc -l || echo "No HTML files found"

      - name: Upload Doxygen log
        uses: actions/upload-artifact@v4
        with:
          name: doxygen-log
          path: doxygen_warnings.log
          if-no-files-found: ignore

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/html

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4